# Generated by Django 4.2.6 on 2023-11-15 18:43

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated at")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="Created at")),
                ("title", models.CharField(max_length=256, verbose_name="Title")),
                ("description", models.TextField(blank=True, verbose_name="Description")),
                (
                    "weight",
                    models.PositiveIntegerField(
                        help_text="Weight for activity used for adjusting activity frequency during the randomizing",
                        verbose_name="Weight",
                    ),
                ),
                ("duration", models.DurationField(default=datetime.timedelta(seconds=3600), verbose_name="Duration")),
                ("start_time", models.TimeField(verbose_name="Start time")),
                ("end_time", models.TimeField(verbose_name="End time")),
            ],
            options={
                "verbose_name": "Activity",
                "verbose_name_plural": "Activities",
            },
        ),
        migrations.CreateModel(
            name="ActivityCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated at")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="Created at")),
                ("name", models.CharField(max_length=256, verbose_name="Name")),
            ],
            options={
                "verbose_name": "Activity category",
                "verbose_name_plural": "Activity categories",
            },
        ),
        migrations.CreateModel(
            name="OngoingActivity",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated at")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="Created at")),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ongoing_activities",
                        to="activities.activity",
                        verbose_name="Ongoing activity",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ongoing_activities",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ongoing activity",
                "verbose_name_plural": "Ongoing activities",
            },
        ),
        migrations.AddField(
            model_name="activity",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="activities",
                to="activities.activitycategory",
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="enabled_for",
            field=models.ManyToManyField(
                related_name="enabled_activities",
                through="activities.OngoingActivity",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Enabled for",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="owner",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name="ActivityCompletion",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated at")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="Created at")),
                ("scheduled_on", models.DateField(verbose_name="Scheduled on")),
                ("completion_time", models.DateTimeField(blank=True, null=True, verbose_name="Completion time")),
                (
                    "ongoing_activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completions",
                        to="activities.ongoingactivity",
                        verbose_name="Ongoing activity",
                    ),
                ),
            ],
            options={
                "indexes": [models.Index(fields=["scheduled_on"], name="activities__schedul_5ab7bc_idx")],
            },
        ),
        migrations.AddIndex(
            model_name="activity",
            index=models.Index(fields=["category"], name="activities__categor_f36a4e_idx"),
        ),
        migrations.AddConstraint(
            model_name="activity",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("title"), models.F("title"), name="unique_title"
            ),
        ),
    ]
